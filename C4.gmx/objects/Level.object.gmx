<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create Level
global.gWidth  = 7;  // Width of the Game grid
global.gHeight = 6;  // Height of the Game grid
global.cSize   = background_get_width(bg_frame); // Width/Height of the cells in the grid

// Create game grid
global.grid = ds_grid_create(global.gWidth, global.gHeight);
ds_grid_clear(global.grid, EMPTY);

// Draw the frame
draw_frame();

// Create Drop Selection
for (i = 0; i &lt; global.gWidth; i++)
{
    var btn = instance_create(global.xoffset + (global.cSize * i), global.yoffset - global.cSize , Btn_Column);
    btn.column = i; // Assign the button a column id
}

// Other Vars
global.count = 0; // The count up to global.check
global.check = 4; // How many in a row needed to win

global.win = false;
global.win_x = noone;
global.win_y = noone;

// Set Player 1's color
if global.AI_Color = RED
{
    global.P1_Color = YELLOW;
}
else
{
    global.P1_Color = RED;
}

randomize();
global.turn = choose(RED, YELLOW);
if (global.AI_Color = global.turn)
{
    // Start AI turn 
    Level.alarm[1] = 1;
    show_debug_message('AI!');
} 

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Start AI turn

// Create AI Object
instance_create(0,0,AI);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Switch to next color
next_turn();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw win totals
var xx = display_get_gui_width()/2;
var yy = 8;

draw_set_font(fnt_title);
draw_set_color(c_black);
draw_set_halign(fa_center);
draw_text_transformed(xx, yy, 'CONNECT FOUR', 1.7, 1, 0);

xx = display_get_gui_width();
yy = display_get_gui_height()/3;
draw_set_font(fnt_menu);
draw_set_halign(fa_left);

if (global.turn = RED) 
{ 
    draw_set_color(c_red); 
}
else
{
    draw_set_color(c_black);   
}

draw_text(32, yy, 'RED');

draw_set_color(c_black); 
draw_text(32, yy + 32, string(global.red_wins));

draw_set_halign(fa_right);

if (global.turn = YELLOW) 
{ 
    draw_set_color(c_yellow); 
}
else
{
    draw_set_color(c_black);   
}

draw_text(xx-32, yy, 'YELLOW');

draw_set_color(c_black); 
draw_text(xx-32, yy + 32, string(global.yellow_wins));

draw_set_halign(fa_left);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
